{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeddbackOptions.js","components/Section/SectionTitle.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/SectionTitle.module.css"],"names":["module","exports","Statistics","good","neutral","bad","totalFeedback","positiveFeedback","className","s","feedbacksList","FeedbackOptions","options","onLeaveFeedback","map","option","label","toUpperCase","slice","button","name","onClick","Section","title","children","titleText","Notification","message","notification","App","state","handleChange","e","stateButtonName","target","textContent","toLowerCase","setState","prevState","key","this","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,aAAe,qC,uIC6BlBC,EA1BI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,cACAC,EALiB,EAKjBA,iBALiB,OAOjB,qCACE,qBAAIC,UAAWC,IAAEC,cAAjB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,QAEZ,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCWWI,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GACX,IAAMC,EAAQD,EAAO,GAAGE,cAAgBF,EAAOG,MAAM,GACrD,OACE,wBACEV,UAAWC,IAAEU,OAEbC,KAAML,EACNM,QAASR,EAJX,SAMGG,GAJID,S,gBCIFO,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,oBAAIhB,UAAWC,IAAEgB,UAAjB,SAA6BF,IAC5BC,M,iBCKUE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,oBAAInB,UAAWC,IAAEmB,aAAjB,SAAgCD,KCkE1BE,E,4MAhEbC,MAAQ,CACN3B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP0B,aAAe,SAAAC,GACb,IAAMC,EAAkBD,EAAEE,OAAOC,YAAYC,cAC7C,EAAKC,UAAS,SAAAC,GACZ,IAAK,IAAMC,KAAOD,EAChB,GAAIC,IAAQN,EACV,OAAO,eAAGM,EAAMD,EAAUC,GAAO,O,wDAMzC,WACE,IAAIjC,EAAgB,EACpB,IAAK,IAAMiC,KAAOC,KAAKV,MACrBxB,GAAiBkC,KAAKV,MAAMS,GAE9B,OAAOjC,I,6CAGT,SAAgCA,GAC9B,OAAyB,IAAlBA,EACH,EACAmC,KAAKC,MAAyB,IAAlBF,KAAKV,MAAM3B,KAAcG,K,oBAG3C,WACE,IAAMA,EAAgBkC,KAAKG,qBACrBpC,EAAmBiC,KAAKI,gCAC5BtC,GAHK,EAKwBkC,KAAKV,MAA5B3B,EALD,EAKCA,KAAMC,EALP,EAKOA,QAASC,EALhB,EAKgBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASkB,MAAM,6BAAf,SACE,cAAC,EAAD,CACEX,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB2B,KAAKT,iBAG1B,cAAC,EAAD,CAASR,MAAM,aAAf,SACGjB,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,cAAeA,EACfC,iBAAkBA,IAGpB,cAAC,EAAD,CAAcoB,QAAQ,+B,GAzDhBkB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BlD,EAAOC,QAAU,CAAC,cAAgB,oC,kBCAlCD,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,UAAY,mC","file":"static/js/main.f1ecd39b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__36TJg\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  totalFeedback,\r\n  positiveFeedback,\r\n}) => (\r\n  <>\r\n    <ul className={s.feedbacksList}>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n    </ul>\r\n    <p>Total: {totalFeedback}</p>\r\n    <p>Positive feedback: {positiveFeedback}%</p>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  totalFeedback: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => {\r\n        const label = option[0].toUpperCase() + option.slice(1);\r\n        return (\r\n          <button\r\n            className={s.button}\r\n            key={option}\r\n            name={option}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {label}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './SectionTitle.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2 className={s.titleText}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nfunction Notification({ message }) {\r\n  return <h2 className={s.notification}>{message}</h2>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChange = e => {\n    const stateButtonName = e.target.textContent.toLowerCase();\n    this.setState(prevState => {\n      for (const key in prevState) {\n        if (key === stateButtonName) {\n          return { [key]: prevState[key] + 1 };\n        }\n      }\n    });\n  };\n\n  countTotalFeedback() {\n    let totalFeedback = 0;\n    for (const key in this.state) {\n      totalFeedback += this.state[key];\n    }\n    return totalFeedback;\n  }\n\n  countPositiveFeedbackPercentage(totalFeedback) {\n    return totalFeedback === 0\n      ? 0\n      : Math.round((this.state.good * 100) / totalFeedback);\n  }\n\n  render() {\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage(\n      totalFeedback,\n    );\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handleChange}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              totalFeedback={totalFeedback}\n              positiveFeedback={positiveFeedback}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbacksList\":\"Statistics_feedbacksList__2CNlB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3bwTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleText\":\"SectionTitle_titleText__-GYfj\"};"],"sourceRoot":""}